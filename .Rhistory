DATA_Finances$section<-as.character(DATA_Finances$section)
DATA_Finances$title<-as.character(DATA_Finances$title)
DATA_Finances$subtitle<-as.character(DATA_Finances$subtitle)
DATA_Finances$valY<-as.character(DATA_Finances$valY)
DATA_Finances$valY1<-as.character(DATA_Finances$valY1)
DATA_Finances$NameISIN<-as.character(DATA_Finances$NameISIN)
DATA_Finances$i<-as.character(DATA_Finances$i)
DATA_Finances$j<-as.character(DATA_Finances$j)
DATA_Finances$m<-as.character(DATA_Finances$m)
j=1
value<-DATA_Values_FR$NameISIN[j]
url<-paste("http://www.zonebourse.com/",value,"/fondamentaux/",sep="")
DATA_Finances<-fillTable(value,url)
View(DATA_Finances)
j=2
value<-DATA_Values_FR$NameISIN[j]
url<-paste("http://www.zonebourse.com/",value,"/fondamentaux/",sep="")
value
DATA_Finances<-fillTable(value,url)
View(DATA_Finances)
fillTable <- function(value,url,print=TRUE) {
script <- getURL(url)
doc <- htmlParse(script)
li <- getNodeSet(doc, "//table[@class='ReutersTabInit']")
rm(script,doc)#rm(url);
rows <- lapply(li, xpathSApply, "//tr[@class='ReutersTabOdd']", xmlValue)
rows[sapply(rows, is.list)] <- NA
t<-length(li) # nombre de tableaux
l<-lapply(rows, length)[[1]][[1]] # nombre de lignes dans chaque tableau #pb n'est pas le meme dans chaque
n<-nrow(DATA_Finances)
m=1
for (i in 1:t) {
for (j in 1:l) {
DATA_Finances[n+m,1]<-gsub('\\r\\n        ','',xmlValue(li[[i]][[1]][[1]][[1]])) #section_title
DATA_Finances[n+m,2]<-gsub('\r\n        ','',xmlValue(li[[i]][[j+1]][[1]][[1]][[1]]))#title
DATA_Finances[n+m,3]<-xmlValue(li[[i]][[j+1]][[1]][[3]][[1]]) #subtitle
DATA_Finances[n+m,4]<-xmlValue(li[[i]][[j+1]][[2]][[2]][[1]]) # valY
DATA_Finances[n+m,5]<-xmlValue(li[[i]][[j+1]][[3]][[2]][[1]]) # valY1
DATA_Finances[n+m,6]<-as.character(value)
DATA_Finances[n+m,7]<-i
DATA_Finances[n+m,8]<-j
DATA_Finances[n+m,9]<-m
m<-m+1
}
}
rm(i,j,t,l,m)#rm(testRow,z)
#DATA_Finances<-subset(DATA_Finances,title!="NA" && valY!="NA") # a revoir, supprime 1 valeur de trop
# del<-c(3:8,15:16,23:24,29:32); DATA_Finances<-DATA_Finances[-del,]
return(DATA_Finances)
}
DATA_Finances<-fillAllTable()
View(DATA_Finances)
rm(DATA_Finances)
rm(DATA_Finances)
DATA_Finances<-data.frame(section=character(0),title=character(0),subtitle=character(0),valY=character(0),valY1=character(0),NameISIN=character(0),i=character(0),j=character(0),m=character(0))
DATA_Finances$section<-as.character(DATA_Finances$section)
DATA_Finances$title<-as.character(DATA_Finances$title)
DATA_Finances$subtitle<-as.character(DATA_Finances$subtitle)
DATA_Finances$valY<-as.character(DATA_Finances$valY)
DATA_Finances$valY1<-as.character(DATA_Finances$valY1)
DATA_Finances$NameISIN<-as.character(DATA_Finances$NameISIN)
DATA_Finances$i<-as.character(DATA_Finances$i)
DATA_Finances$j<-as.character(DATA_Finances$j)
DATA_Finances$m<-as.character(DATA_Finances$m)
j=1
value<-DATA_Values_FR$NameISIN[j]
url<-paste("http://www.zonebourse.com/",value,"/fondamentaux/",sep="")
DATA_Finances<-fillTable(value,url)
View(DATA_Finances)
j=2
value<-DATA_Values_FR$NameISIN[j]
url<-paste("http://www.zonebourse.com/",value,"/fondamentaux/",sep="")
DATA_Finances<-fillTable(value,url)
View(DATA_Finances)
j=3
value<-DATA_Values_FR$NameISIN[j]
url<-paste("http://www.zonebourse.com/",value,"/fondamentaux/",sep="")
DATA_Finances<-fillTable(value,url)
View(DATA_Finances)
rm(DATA_Finances)
DATA_Finances<-fillAllTable()
fillTable <- function(value,url,print=TRUE) {
script <- getURL(url)
doc <- htmlParse(script)
li <- getNodeSet(doc, "//table[@class='ReutersTabInit']")
rm(script,doc)#rm(url);
rows <- lapply(li, xpathSApply, "//tr[@class='ReutersTabOdd']", xmlValue)
rows[sapply(rows, is.list)] <- NA
t<-length(li) # nombre de tableaux
l<-lapply(rows, length)[[1]][[1]] # nombre de lignes dans chaque tableau #pb n'est pas le meme dans chaque
n<-if(exists(DATA_Finances){nrow(DATA_Finances)}else{0}
m=1
for (i in 1:t) {
for (j in 1:l) {
DATA_Finances[n+m,1]<-gsub('\\r\\n        ','',xmlValue(li[[i]][[1]][[1]][[1]])) #section_title
DATA_Finances[n+m,2]<-gsub('\r\n        ','',xmlValue(li[[i]][[j+1]][[1]][[1]][[1]]))#title
DATA_Finances[n+m,3]<-xmlValue(li[[i]][[j+1]][[1]][[3]][[1]]) #subtitle
DATA_Finances[n+m,4]<-xmlValue(li[[i]][[j+1]][[2]][[2]][[1]]) # valY
DATA_Finances[n+m,5]<-xmlValue(li[[i]][[j+1]][[3]][[2]][[1]]) # valY1
DATA_Finances[n+m,6]<-as.character(value)
DATA_Finances[n+m,7]<-i
DATA_Finances[n+m,8]<-j
DATA_Finances[n+m,9]<-m
m<-m+1
}
}
rm(i,j,t,l,m)#rm(testRow,z)
#DATA_Finances<-subset(DATA_Finances,title!="NA" && valY!="NA") # a revoir, supprime 1 valeur de trop
# del<-c(3:8,15:16,23:24,29:32); DATA_Finances<-DATA_Finances[-del,]
return(DATA_Finances)
}
fillAllTable<-function(){
rm(DATA_Finances)
DATA_Finances<-data.frame(section=character(0),title=character(0),subtitle=character(0),valY=character(0),valY1=character(0),NameISIN=character(0),i=character(0),j=character(0),m=character(0))
DATA_Finances$section<-as.character(DATA_Finances$section)
DATA_Finances$title<-as.character(DATA_Finances$title)
DATA_Finances$subtitle<-as.character(DATA_Finances$subtitle)
DATA_Finances$valY<-as.character(DATA_Finances$valY)
DATA_Finances$valY1<-as.character(DATA_Finances$valY1)
DATA_Finances$NameISIN<-as.character(DATA_Finances$NameISIN)
DATA_Finances$i<-as.character(DATA_Finances$i)
DATA_Finances$j<-as.character(DATA_Finances$j)
DATA_Finances$m<-as.character(DATA_Finances$m)
for (j in 1:nrow(DATA_Values_FR)) {
value<-DATA_Values_FR$NameISIN[j]
url<-paste("http://www.zonebourse.com/",value,"/fondamentaux/",sep="")
DATA_Finances<-fillTable(value,url)
DATA_Finances$guid<-url
return(DATA_Finances)
}
DATA_Finances<-getISIN(DATA_Finances)
}
DATA_Finances<-fillAllTable()
fillTable <- function(value,url,print=TRUE) {
script <- getURL(url)
doc <- htmlParse(script)
li <- getNodeSet(doc, "//table[@class='ReutersTabInit']")
rm(script,doc)#rm(url);
rows <- lapply(li, xpathSApply, "//tr[@class='ReutersTabOdd']", xmlValue)
rows[sapply(rows, is.list)] <- NA
t<-length(li) # nombre de tableaux
l<-lapply(rows, length)[[1]][[1]] # nombre de lignes dans chaque tableau #pb n'est pas le meme dans chaque
n<-if(exists(DATA_Finances){nrow(DATA_Finances)}else{0}
m=1
for (i in 1:t) {
for (j in 1:l) {
DATA_Finances[n+m,1]<-gsub('\\r\\n        ','',xmlValue(li[[i]][[1]][[1]][[1]])) #section_title
DATA_Finances[n+m,2]<-gsub('\r\n        ','',xmlValue(li[[i]][[j+1]][[1]][[1]][[1]]))#title
DATA_Finances[n+m,3]<-xmlValue(li[[i]][[j+1]][[1]][[3]][[1]]) #subtitle
DATA_Finances[n+m,4]<-xmlValue(li[[i]][[j+1]][[2]][[2]][[1]]) # valY
DATA_Finances[n+m,5]<-xmlValue(li[[i]][[j+1]][[3]][[2]][[1]]) # valY1
DATA_Finances[n+m,6]<-as.character(value)
DATA_Finances[n+m,7]<-i
DATA_Finances[n+m,8]<-j
DATA_Finances[n+m,9]<-m
m<-m+1
}
}
rm(i,j,t,l,m)#rm(testRow,z)
#DATA_Finances<-subset(DATA_Finances,title!="NA" && valY!="NA") # a revoir, supprime 1 valeur de trop
# del<-c(3:8,15:16,23:24,29:32); DATA_Finances<-DATA_Finances[-del,]
return(DATA_Finances)
}
fillAllTable<-function(){
rm(DATA_Finances)
DATA_Finances<-data.frame(section=character(0),title=character(0),subtitle=character(0),valY=character(0),valY1=character(0),NameISIN=character(0),i=character(0),j=character(0),m=character(0))
DATA_Finances$section<-as.character(DATA_Finances$section)
DATA_Finances$title<-as.character(DATA_Finances$title)
DATA_Finances$subtitle<-as.character(DATA_Finances$subtitle)
DATA_Finances$valY<-as.character(DATA_Finances$valY)
DATA_Finances$valY1<-as.character(DATA_Finances$valY1)
DATA_Finances$NameISIN<-as.character(DATA_Finances$NameISIN)
DATA_Finances$i<-as.character(DATA_Finances$i)
DATA_Finances$j<-as.character(DATA_Finances$j)
DATA_Finances$m<-as.character(DATA_Finances$m)
for (j in 1:nrow(DATA_Values_FR)) {
value<-DATA_Values_FR$NameISIN[j]
url<-paste("http://www.zonebourse.com/",value,"/fondamentaux/",sep="")
DATA_Finances<-fillTable(value,url)
DATA_Finances$guid<-url
return(DATA_Finances)
}
DATA_Finances<-getISIN(DATA_Finances)
}
DATA_Finances<-fillAllTable()
rm(DATA_Finances)
DATA_Finances<-data.frame(section=character(0),title=character(0),subtitle=character(0),valY=character(0),valY1=character(0),NameISIN=character(0),i=character(0),j=character(0),m=character(0))
DATA_Finances$section<-as.character(DATA_Finances$section)
DATA_Finances$title<-as.character(DATA_Finances$title)
DATA_Finances$subtitle<-as.character(DATA_Finances$subtitle)
DATA_Finances$valY<-as.character(DATA_Finances$valY)
DATA_Finances$valY1<-as.character(DATA_Finances$valY1)
DATA_Finances$NameISIN<-as.character(DATA_Finances$NameISIN)
DATA_Finances$i<-as.character(DATA_Finances$i)
DATA_Finances$j<-as.character(DATA_Finances$j)
DATA_Finances$m<-as.character(DATA_Finances$m)
for (j in 1:nrow(DATA_Values_FR)) {
value<-DATA_Values_FR$NameISIN[j]
url<-paste("http://www.zonebourse.com/",value,"/fondamentaux/",sep="")
DATA_Finances<-fillTable(value,url)
DATA_Finances$guid<-url
return(DATA_Finances)
}
DATA_Finances<-getISIN(DATA_Finances)
rm(DATA_Finances)
DATA_Finances<-data.frame(section=character(0),title=character(0),subtitle=character(0),valY=character(0),valY1=character(0),NameISIN=character(0),i=character(0),j=character(0),m=character(0))
DATA_Finances$section<-as.character(DATA_Finances$section)
DATA_Finances$title<-as.character(DATA_Finances$title)
DATA_Finances$subtitle<-as.character(DATA_Finances$subtitle)
DATA_Finances$valY<-as.character(DATA_Finances$valY)
DATA_Finances$valY1<-as.character(DATA_Finances$valY1)
DATA_Finances$NameISIN<-as.character(DATA_Finances$NameISIN)
DATA_Finances$i<-as.character(DATA_Finances$i)
DATA_Finances$j<-as.character(DATA_Finances$j)
DATA_Finances$m<-as.character(DATA_Finances$m)
for (j in 1:nrow(DATA_Values_FR)) {
value<-DATA_Values_FR$NameISIN[j]
url<-paste("http://www.zonebourse.com/",value,"/fondamentaux/",sep="")
DATA_Finances<-fillTable(value,url)
DATA_Finances$guid<-url
#return(DATA_Finances)
}
DATA_Finances<-getISIN(DATA_Finances)
View(DATA_Finances)
subset(DATA_Finances,title!="NA" && valY!="NA")
DATA_Finances2<-subset(DATA_Finances,title!="NA" && valY!="NA") # a revoir, supprime 1 valeur de trop
View(DATA_Finances2)
DATA_Finances2<-subset(DATA_Finances,title!="NA")
View(DATA_Finances2)
DATA_Finances2<-subset(DATA_Finances,valY!="NA")
View(DATA_Finances2)
DATA_Finances2<-subset(DATA_Finances,valY="NA" && valY1="NA")
DATA_Finances2<-subset(DATA_Finances,valY=="NA" && valY1=="NA")
DATA_Finances2<-subset(DATA_Finances,!(valY=="NA" && valY1=="NA"))
View(DATA_Finances2)
DATA_Finances2<- DATA_Finances[ which(valY!="NA" && valY1!="NA") , ]
DATA_Finances2<- DATA_Finances[ which(DATA_Finances$valY!="NA" && DATA_Finances$valY1!="NA") , ]
View(DATA_Finances2)
DATA_Finances2<- DATA_Finances[ which(DATA_Finances$valY!="NA" | DATA_Finances$valY1!="NA") , ]
View(DATA_Finances2)
rm(j)
rm(url,value)
rm(DATA_Finances)
DATA_Finances<-data.frame(section=character(0),title=character(0),subtitle=character(0),valY=character(0),valY1=character(0),NameISIN=character(0),i=character(0),j=character(0),m=character(0))
DATA_Finances$section<-as.character(DATA_Finances$section)
DATA_Finances$title<-as.character(DATA_Finances$title)
DATA_Finances$subtitle<-as.character(DATA_Finances$subtitle)
DATA_Finances$valY<-as.character(DATA_Finances$valY)
DATA_Finances$valY1<-as.character(DATA_Finances$valY1)
DATA_Finances$NameISIN<-as.character(DATA_Finances$NameISIN)
DATA_Finances$i<-as.character(DATA_Finances$i)
DATA_Finances$j<-as.character(DATA_Finances$j)
DATA_Finances$m<-as.character(DATA_Finances$m)
for (j in 1:nrow(DATA_Values_FR)) {
value<-DATA_Values_FR$NameISIN[j]
url<-paste("http://www.zonebourse.com/",value,"/fondamentaux/",sep="")
DATA_Finances<-fillTable(value,url)
DATA_Finances$guid<-url
}
DATA_Finances<- DATA_Finances[ which(DATA_Finances$valY!="NA" | DATA_Finances$valY1!="NA") , ]
DATA_Finances<-getISIN(DATA_Finances)
rm(DATA_Finances2)
rm(j,url,value)
View(DATA_Finances)
fillTable <- function(value,url,print=TRUE) {
script <- getURL(url)
doc <- htmlParse(script)
li <- getNodeSet(doc, "//table[@class='ReutersTabInit']")
rm(script,doc)#rm(url);
rows <- lapply(li, xpathSApply, "//tr[@class='ReutersTabOdd']", xmlValue)
rows[sapply(rows, is.list)] <- NA
t<-length(li) # nombre de tableaux
l<-lapply(rows, length)[[1]][[1]] # nombre de lignes dans chaque tableau #pb n'est pas le meme dans chaque
n<-if(exists(DATA_Finances){nrow(DATA_Finances)}else{0}
m=1
for (i in 1:t) {
for (j in 1:l) {
DATA_Finances[n+m,1]<-gsub('\\r\\n        ','',xmlValue(li[[i]][[1]][[1]][[1]])) #section_title
DATA_Finances[n+m,2]<-gsub('\r\n        ','',xmlValue(li[[i]][[j+1]][[1]][[1]][[1]]))#title
DATA_Finances[n+m,3]<-xmlValue(li[[i]][[j+1]][[1]][[3]][[1]]) #subtitle
DATA_Finances[n+m,4]<-xmlValue(li[[i]][[j+1]][[2]][[2]][[1]]) # valY
DATA_Finances[n+m,5]<-xmlValue(li[[i]][[j+1]][[3]][[2]][[1]]) # valY1
DATA_Finances[n+m,6]<-as.character(value)
DATA_Finances[n+m,7]<-i
DATA_Finances[n+m,8]<-j
DATA_Finances[n+m,9]<-m
DATA_Finances[n+m,10]<-url
m<-m+1
}
}
rm(i,j,t,l,m)
return(DATA_Finances)
}
rm(DATA_Finances)
DATA_Finances<-data.frame(section=character(0),title=character(0),subtitle=character(0),valY=character(0),valY1=character(0),NameISIN=character(0),i=character(0),j=character(0),m=character(0),guid=character(0))
DATA_Finances$section<-as.character(DATA_Finances$section)
DATA_Finances$title<-as.character(DATA_Finances$title)
DATA_Finances$subtitle<-as.character(DATA_Finances$subtitle)
DATA_Finances$valY<-as.character(DATA_Finances$valY)
DATA_Finances$valY1<-as.character(DATA_Finances$valY1)
DATA_Finances$NameISIN<-as.character(DATA_Finances$NameISIN)
DATA_Finances$i<-as.character(DATA_Finances$i)
DATA_Finances$j<-as.character(DATA_Finances$j)
DATA_Finances$m<-as.character(DATA_Finances$m)
DATA_Finances$guid<-as.character(DATA_Finances$guid)
for (j in 1:nrow(DATA_Values_FR)) {
value<-DATA_Values_FR$NameISIN[j]
url<-paste("http://www.zonebourse.com/",value,"/fondamentaux/",sep="")
DATA_Finances<-fillTable(value,url)
}
DATA_Finances<- DATA_Finances[ which(DATA_Finances$valY!="NA" | DATA_Finances$valY1!="NA") , ]
DATA_Finances<-getISIN(DATA_Finances)
rm(j,url,value)
View(DATA_Finances)
rm(DATA_Finances)
DATA_Finances<-data.frame(section=character(0),title=character(0),subtitle=character(0),valY=character(0),valY1=character(0),NameISIN=character(0),i=character(0),j=character(0),m=character(0),guid=character(0))
DATA_Finances$section<-as.character(DATA_Finances$section)
DATA_Finances$title<-as.character(DATA_Finances$title)
DATA_Finances$subtitle<-as.character(DATA_Finances$subtitle)
DATA_Finances$valY<-as.character(DATA_Finances$valY)
DATA_Finances$valY1<-as.character(DATA_Finances$valY1)
DATA_Finances$NameISIN<-as.character(DATA_Finances$NameISIN)
DATA_Finances$i<-as.character(DATA_Finances$i)
DATA_Finances$j<-as.character(DATA_Finances$j)
DATA_Finances$m<-as.character(DATA_Finances$m)
DATA_Finances$guid<-as.character(DATA_Finances$guid)
j=1
value<-DATA_Values_FR$NameISIN[j]
url<-paste("http://www.zonebourse.com/",value,"/fondamentaux/",sep="")
DATA_Finances<-fillTable(value,url)
View(DATA_Finances)
rm(DATA_Finances)
DATA_Finances<-data.frame(section=character(0),title=character(0),subtitle=character(0),valY=character(0),valY1=character(0),NameISIN=character(0),i=character(0),j=character(0),m=character(0),guid=character(0))
DATA_Finances$section<-as.character(DATA_Finances$section)
DATA_Finances$title<-as.character(DATA_Finances$title)
DATA_Finances$subtitle<-as.character(DATA_Finances$subtitle)
DATA_Finances$valY<-as.character(DATA_Finances$valY)
DATA_Finances$valY1<-as.character(DATA_Finances$valY1)
DATA_Finances$NameISIN<-as.character(DATA_Finances$NameISIN)
DATA_Finances$i<-as.character(DATA_Finances$i)
DATA_Finances$j<-as.character(DATA_Finances$j)
DATA_Finances$m<-as.character(DATA_Finances$m)
DATA_Finances$guid<-as.character(DATA_Finances$guid)
value<-DATA_Values_FR$NameISIN[j]
url<-paste("http://www.zonebourse.com/",value,"/fondamentaux/",sep="")
script <- getURL(url)
doc <- htmlParse(script)
li <- getNodeSet(doc, "//table[@class='ReutersTabInit']")
rm(script,doc)#rm(url);
rows <- lapply(li, xpathSApply, "//tr[@class='ReutersTabOdd']", xmlValue)
rows[sapply(rows, is.list)] <- NA
t<-length(li) # nombre de tableaux
l<-lapply(rows, length)[[1]][[1]] # nombre de lignes dans chaque tableau #pb n'est pas le meme dans chaque
n<-if(exists(DATA_Finances){nrow(DATA_Finances)}else{0}
m=1
fillTable <- function(value,url,print=TRUE) {
script <- getURL(url)
doc <- htmlParse(script)
li <- getNodeSet(doc, "//table[@class='ReutersTabInit']")
rm(script,doc)#rm(url);
rows <- lapply(li, xpathSApply, "//tr[@class='ReutersTabOdd']", xmlValue)
rows[sapply(rows, is.list)] <- NA
t<-length(li) # nombre de tableaux
l<-lapply(rows, length)[[1]][[1]] # nombre de lignes dans chaque tableau #pb n'est pas le meme dans chaque
n<-if(exists(DATA_Finances)){nrow(DATA_Finances)}else{0}
m=1
for (i in 1:t) {
for (j in 1:l) {
DATA_Finances[n+m,1]<-gsub('\\r\\n        ','',xmlValue(li[[i]][[1]][[1]][[1]])) #section_title
DATA_Finances[n+m,2]<-gsub('\r\n        ','',xmlValue(li[[i]][[j+1]][[1]][[1]][[1]]))#title
DATA_Finances[n+m,3]<-xmlValue(li[[i]][[j+1]][[1]][[3]][[1]]) #subtitle
DATA_Finances[n+m,4]<-xmlValue(li[[i]][[j+1]][[2]][[2]][[1]]) # valY
DATA_Finances[n+m,5]<-xmlValue(li[[i]][[j+1]][[3]][[2]][[1]]) # valY1
DATA_Finances[n+m,6]<-as.character(value) # NameISIN
DATA_Finances[n+m,7]<-i
DATA_Finances[n+m,8]<-j
DATA_Finances[n+m,9]<-m
DATA_Finances[n+m,10]<-url #guid
m<-m+1
}
}
rm(i,j,t,l,m)
return(DATA_Finances)
}
rm(DATA_Finances)
DATA_Finances<-data.frame(section=character(0),title=character(0),subtitle=character(0),valY=character(0),valY1=character(0),NameISIN=character(0),i=character(0),j=character(0),m=character(0),guid=character(0))
DATA_Finances$section<-as.character(DATA_Finances$section)
DATA_Finances$title<-as.character(DATA_Finances$title)
DATA_Finances$subtitle<-as.character(DATA_Finances$subtitle)
DATA_Finances$valY<-as.character(DATA_Finances$valY)
DATA_Finances$valY1<-as.character(DATA_Finances$valY1)
DATA_Finances$NameISIN<-as.character(DATA_Finances$NameISIN)
DATA_Finances$i<-as.character(DATA_Finances$i)
DATA_Finances$j<-as.character(DATA_Finances$j)
DATA_Finances$m<-as.character(DATA_Finances$m)
DATA_Finances$guid<-as.character(DATA_Finances$guid)
value<-DATA_Values_FR$NameISIN[j]
url<-paste("http://www.zonebourse.com/",value,"/fondamentaux/",sep="")
script <- getURL(url)
doc <- htmlParse(script)
li <- getNodeSet(doc, "//table[@class='ReutersTabInit']")
rm(script,doc)#rm(url);
rows <- lapply(li, xpathSApply, "//tr[@class='ReutersTabOdd']", xmlValue)
rows[sapply(rows, is.list)] <- NA
t<-length(li) # nombre de tableaux
l<-lapply(rows, length)[[1]][[1]] # nombre de lignes dans chaque tableau #pb n'est pas le meme dans chaque
n<-if(exists(DATA_Finances)){nrow(DATA_Finances)}else{0}
m=1
n<-nrow(DATA_Finances)
fillTable <- function(value,url,print=TRUE) {
script <- getURL(url)
doc <- htmlParse(script)
li <- getNodeSet(doc, "//table[@class='ReutersTabInit']")
rm(script,doc)#rm(url);
rows <- lapply(li, xpathSApply, "//tr[@class='ReutersTabOdd']", xmlValue)
rows[sapply(rows, is.list)] <- NA
t<-length(li) # nombre de tableaux
l<-lapply(rows, length)[[1]][[1]] # nombre de lignes dans chaque tableau #pb n'est pas le meme dans chaque
n<-nrow(DATA_Finances)
m=1
for (i in 1:t) {
for (j in 1:l) {
DATA_Finances[n+m,1]<-gsub('\\r\\n        ','',xmlValue(li[[i]][[1]][[1]][[1]])) #section_title
DATA_Finances[n+m,2]<-gsub('\r\n        ','',xmlValue(li[[i]][[j+1]][[1]][[1]][[1]]))#title
DATA_Finances[n+m,3]<-xmlValue(li[[i]][[j+1]][[1]][[3]][[1]]) #subtitle
DATA_Finances[n+m,4]<-xmlValue(li[[i]][[j+1]][[2]][[2]][[1]]) # valY
DATA_Finances[n+m,5]<-xmlValue(li[[i]][[j+1]][[3]][[2]][[1]]) # valY1
DATA_Finances[n+m,6]<-as.character(value) # NameISIN
DATA_Finances[n+m,7]<-i
DATA_Finances[n+m,8]<-j
DATA_Finances[n+m,9]<-m
DATA_Finances[n+m,10]<-url #guid
m<-m+1
}
}
rm(i,j,t,l,m)
return(DATA_Finances)
}
script <- getURL(url)
doc <- htmlParse(script)
li <- getNodeSet(doc, "//table[@class='ReutersTabInit']")
rm(script,doc)#rm(url);
rows <- lapply(li, xpathSApply, "//tr[@class='ReutersTabOdd']", xmlValue)
rows[sapply(rows, is.list)] <- NA
t<-length(li) # nombre de tableaux
l<-lapply(rows, length)[[1]][[1]] # nombre de lignes dans chaque tableau #pb n'est pas le meme dans chaque
n<-nrow(DATA_Finances)
m=1
DATA_Finances[n+m,1]<-gsub('\\r\\n        ','',xmlValue(li[[i]][[1]][[1]][[1]])) #section_title
i=1
j=1
DATA_Finances[n+m,1]<-gsub('\\r\\n        ','',xmlValue(li[[i]][[1]][[1]][[1]])) #section_title
DATA_Finances[n+m,2]<-gsub('\r\n        ','',xmlValue(li[[i]][[j+1]][[1]][[1]][[1]]))#title
DATA_Finances[n+m,3]<-xmlValue(li[[i]][[j+1]][[1]][[3]][[1]]) #subtitle
DATA_Finances[n+m,4]<-xmlValue(li[[i]][[j+1]][[2]][[2]][[1]]) # valY
DATA_Finances[n+m,5]<-xmlValue(li[[i]][[j+1]][[3]][[2]][[1]]) # valY1
DATA_Finances[n+m,6]<-as.character(value) # NameISIN
DATA_Finances[n+m,7]<-i
DATA_Finances[n+m,8]<-j
DATA_Finances[n+m,9]<-m
View(DATA_Finances)
DATA_Finances[n+m,10]<-url #guid
View(DATA_Finances)
fillTable <- function(value,url,print=TRUE) {
script <- getURL(url)
doc <- htmlParse(script)
li <- getNodeSet(doc, "//table[@class='ReutersTabInit']")
rm(script,doc)#rm(url);
rows <- lapply(li, xpathSApply, "//tr[@class='ReutersTabOdd']", xmlValue)
rows[sapply(rows, is.list)] <- NA
t<-length(li) # nombre de tableaux
l<-lapply(rows, length)[[1]][[1]] # nombre de lignes dans chaque tableau #pb n'est pas le meme dans chaque
n<-nrow(DATA_Finances)
m=1
for (i in 1:t) {
for (j in 1:l) {
DATA_Finances[n+m,1]<-gsub('\\r\\n        ','',xmlValue(li[[i]][[1]][[1]][[1]])) #section_title
DATA_Finances[n+m,2]<-gsub('\r\n        ','',xmlValue(li[[i]][[j+1]][[1]][[1]][[1]]))#title
DATA_Finances[n+m,3]<-xmlValue(li[[i]][[j+1]][[1]][[3]][[1]]) #subtitle
DATA_Finances[n+m,4]<-xmlValue(li[[i]][[j+1]][[2]][[2]][[1]]) # valY
DATA_Finances[n+m,5]<-xmlValue(li[[i]][[j+1]][[3]][[2]][[1]]) # valY1
DATA_Finances[n+m,6]<-as.character(value) # NameISIN
DATA_Finances[n+m,7]<-i
DATA_Finances[n+m,8]<-j
DATA_Finances[n+m,9]<-m
DATA_Finances[n+m,10]<-url #guid
m<-m+1
}
}
rm(i,j,t,l,m)
return(DATA_Finances)
}
rm(DATA_Finances)
DATA_Finances<-data.frame(section=character(0),title=character(0),subtitle=character(0),valY=character(0),valY1=character(0),NameISIN=character(0),i=character(0),j=character(0),m=character(0),guid=character(0))
DATA_Finances$section<-as.character(DATA_Finances$section)
DATA_Finances$title<-as.character(DATA_Finances$title)
DATA_Finances$subtitle<-as.character(DATA_Finances$subtitle)
DATA_Finances$valY<-as.character(DATA_Finances$valY)
DATA_Finances$valY1<-as.character(DATA_Finances$valY1)
DATA_Finances$NameISIN<-as.character(DATA_Finances$NameISIN)
DATA_Finances$i<-as.character(DATA_Finances$i)
DATA_Finances$j<-as.character(DATA_Finances$j)
DATA_Finances$m<-as.character(DATA_Finances$m)
DATA_Finances$guid<-as.character(DATA_Finances$guid)
for (j in 1:nrow(DATA_Values_FR)) {
value<-DATA_Values_FR$NameISIN[j]
url<-paste("http://www.zonebourse.com/",value,"/fondamentaux/",sep="")
DATA_Finances<-fillTable(value,url)
}
DATA_Finances<- DATA_Finances[ which(DATA_Finances$valY!="NA" | DATA_Finances$valY1!="NA") , ]
DATA_Finances<-getISIN(DATA_Finances)
rm(j,url,value)
