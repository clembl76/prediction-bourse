colors()
?Devices
library(datasets)
data(airquality)
library(ggplot2)
str(airquality)
airquality = transform(airquality, Month = factor(Month))
str(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(datasets)
data(airquality)
library(ggplot2)
str(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
data(movies)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies) + geom_smooth()
require(xlsx)
library(xlsx)
install.packages("xlsx")
require(xlsx)
install.packages("rJava")
library("rJava", lib.loc="~/R/win-library/3.1")
require(rJava)
#install.packages("XML")
library(XML)
library(stringr)
# ##############################################################################################################
#Flux rss Zonebourse.com
# ##############################################################################################################
# fonction de lecture d'un flux
getRSSitems <- function(RSSURL,level,print=TRUE) {
doc<-xmlTreeParse(RSSURL)
src<-xpathApply(xmlRoot(doc),paste( "//",level,sep=""))
for (i in 1:length(src)) {
if (i==1) {
foo<-xmlSApply(src[[i]], xmlValue)
DATA<-data.frame(t(foo), stringsAsFactors=FALSE)
}
else {
foo<-xmlSApply(src[[i]], xmlValue)
tmp<-data.frame(t(foo), stringsAsFactors=FALSE)
DATA<-rbind(DATA, tmp)
}
}
rm(doc)
rm(src)
return(DATA)
}
level<-"item"
Actions <- getRSSitems("http://www.zonebourse.com/rss/FeedAnalyses.php?type=Actions",level) #Stratégie de Trading
Invests <- getRSSitems("http://www.zonebourse.com/rss/FeedAnalysesFondamentales.php",level)#Stratégie d'investissement
Indices <- getRSSitems("http://www.zonebourse.com/rss/FeedAnalyses.php?type=Indices",level) #Stratégie Indices
Forex <- getRSSitems("http://www.zonebourse.com/rss/FeedAnalyses.php?type=Forex",level) #Stratégie Forex
Warrants <- getRSSitems("http://www.zonebourse.com/rss/FeedAnalyses.php?type=Warrants",level) #Stratégie Warrants
Turbos <- getRSSitems("http://www.zonebourse.com/rss/FeedAnalyses.php?type=Turbos",level) #Stratégie Turbos
#Barons <- getRSSitems("http://www.zonebourse.com/rss/FeedBaronsBourse.php",level)# Barons de la bourse
Actualites <- getRSSitems("http://www.zonebourse.com/rss/FeedAnalyses.php",level)# Toute l'actualité
getISIN<-function(table){
#a partir de guid récupérer nom et isin
table$NameISIN<-t(data.frame(strsplit(as.character(table$guid),"/",fixed=TRUE))[4,])
table$Name<-as.data.frame(str_match(table$NameISIN, "^(.*)-([0-9]*)$")[,-1])[,1]
table$ISIN<-as.data.frame(str_match(table$NameISIN, "^(.*)-([0-9]*)$")[,-1])[,2]
table<- subset(table, select=(-NameISIN))
return(table)
}
Invests$enclosure<-""
DATA_RSS<-rbind(Actions,Invests,Indices,Forex,Warrants,Turbos,Actualites)
DATA_RSS<-getISIN(DATA_RSS)
DATA_RSS<- subset(DATA_RSS, select=c(-enclosure,-guid))
rm(Actions,Invests,Indices,Forex,Warrants,Turbos,Actualites)
# ##############################################################################################################
# Aspiration des pages Zonebourse.com
# ##############################################################################################################
# ##############################################################################################################
# Récupérer liste de toutes les valeurs France  Zonebourse.com
# ##############################################################################################################
url<-"http://www.zonebourse.com/bourse/actions/Europe-3/France-51/"
getValuesList <- function(url,j,print=TRUE) {
script <- getURL(url)
doc <- htmlParse(script)
for (i in 1:50) {
#get NameISIN
li <- getNodeSet(doc, paste("//td[@id='iAL",i,"']",sep=""))
if (length(li)==0) break
DATA_Values_FR[(j-1)*50+i,1]<-gsub("/","",xmlGetAttr(li[[1]][[1]],"href"))
#get secteur
li <- getNodeSet(doc, "//td[@class='large200 center']")
DATA_Values_FR[(j-1)*50+i,2]<-xmlGetAttr(li[[i]][[1]],"title")
# get Var1janv and Capitalisation_MUSD
li <- getNodeSet(doc, "//td[@class='large70 right pright20']")
DATA_Values_FR[(j-1)*50+i,3]<-xmlValue(li[[i*2-1]][[1]][[1]])
DATA_Values_FR[(j-1)*50+i,4]<-xmlValue(li[[i*2]][[1]])
#get NoteInvestissement
li <- getNodeSet(doc, "//td[@class='large110 center']")
val<-xmlGetAttr(li[[i]][[1]],"title")
DATA_Values_FR[(j-1)*50+i,5]<-if(is.null(val)){NA}else{val}
#get trends Court Moyen Long terme
li <- getNodeSet(doc, "//td[@class='large20 center']")
DATA_Values_FR[(j-1)*50+i,6]<-if(is.null(li[[i*3-2]][[1]][[1]])){NA}else{strsplit(strsplit(xmlGetAttr(li[[i*3-2]][[1]][[1]],"src"),'.',fixed=TRUE)[[1]][[1]],'_',fixed=TRUE)[[1]][[2]]}
DATA_Values_FR[(j-1)*50+i,7]<-if(is.null(li[[i*3-1]][[1]][[1]])){NA}else{strsplit(strsplit(xmlGetAttr(li[[i*3-1]][[1]][[1]],"src"),'.',fixed=TRUE)[[1]][[1]],'_',fixed=TRUE)[[1]][[2]]}
DATA_Values_FR[(j-1)*50+i,8]<-if(is.null(li[[i*3]][[1]][[1]])){NA}else{strsplit(strsplit(xmlGetAttr(li[[i*3]][[1]][[1]],"src"),'.',fixed=TRUE)[[1]][[1]],'_',fixed=TRUE)[[1]][[2]]}
#get page and row
DATA_Values_FR[(j-1)*50+i,9]<-j
DATA_Values_FR[(j-1)*50+i,10]<-i
}
rm(script,doc,li,i,j,val)
return(DATA_Values_FR)
}
rm(DATA_Values_FR)
DATA_Values_FR<-data.frame(NameISIN=character(0),secteur=character(0),Var1janv=character(0),Capitalisation_MUSD=character(0),NoteInvestissement=character(0),CourtTerme=character(0),MoyenTerme=character(0),LongTerme=character(0),page=numeric(0),ligne=numeric(0))
DATA_Values_FR$NameISIN<-as.character(DATA_Values_FR$NameISIN);DATA_Values_FR$secteur<-as.character(DATA_Values_FR$secteur);
DATA_Values_FR$Var1janv<-as.character(DATA_Values_FR$Var1janv);DATA_Values_FR$Capitalisation_MUSD<-as.character(DATA_Values_FR$Capitalisation_MUSD);
DATA_Values_FR$NoteInvestissement<-as.character(DATA_Values_FR$NoteInvestissement);DATA_Values_FR$CourtTerme<-as.character(DATA_Values_FR$CourtTerme);
DATA_Values_FR$MoyenTerme<-as.character(DATA_Values_FR$MoyenTerme);DATA_Values_FR$LongTerme<-as.character(DATA_Values_FR$LongTerme);
DATA_Values_FR$page<-as.character(DATA_Values_FR$page);DATA_Values_FR$ligne<-as.character(DATA_Values_FR$ligne);
for (j in 1:20) {
url<-paste("http://www.zonebourse.com/bourse/actions/Europe-3/France-51/?Req=&p=",j,sep="")
DATA_Values_FR<-getValuesList(url,j)
}
# ##############################################################################################################
# Aspirateur page Finances d'une valeur Zonebourse.com
# ##############################################################################################################
library(RCurl)
library(XML)
# ok pour une valeur, reste à boucler pour toutes les valeurs -- voir dans la table DATA_Values_FR
url<-"http://www.zonebourse.com/GENFIT-16311755/fondamentaux/"
url<-"http://www.zonebourse.com/AXA-4615/fondamentaux/"
script <- getURL(url)
doc <- htmlParse(script)
li <- getNodeSet(doc, "//table[@class='ReutersTabInit']")
rm(script,doc)#rm(url);
fillTable <- function(li,print=TRUE) {
rows <- lapply(li, xpathSApply, "//tr[@class='ReutersTabOdd']", xmlValue)
rows[sapply(rows, is.list)] <- NA
t<-length(li) # nombre de tableaux
l<-lapply(rows, length)[[1]][[1]] # nombre de lignes dans chaque tableau #pb n'est pas le meme dans chaque
n<-t*l #total de lignes # du coup trop large
DATA_Finances<-data.frame(section=character(0),title=character(0),subtitle=character(0),valY=character(0),valY1=character(0))
DATA_Finances$section<-as.character(DATA_Finances$section)
DATA_Finances$title<-as.character(DATA_Finances$title)
DATA_Finances$subtitle<-as.character(DATA_Finances$subtitle)
DATA_Finances$valY<-as.character(DATA_Finances$valY)
DATA_Finances$valY1<-as.character(DATA_Finances$valY1)
m=1
for (i in 1:t) {
for (j in 1:l) {
DATA_Finances[m,1]<-gsub('\\r\\n        ','',xmlValue(li[[i]][[1]][[1]][[1]])) #section_title
DATA_Finances[m,2]<-gsub('\r\n        ','',xmlValue(li[[i]][[j+1]][[1]][[1]][[1]]))#title
DATA_Finances[m,3]<-xmlValue(li[[i]][[j+1]][[1]][[3]][[1]]) #subtitle
DATA_Finances[m,4]<-xmlValue(li[[i]][[j+1]][[2]][[2]][[1]]) # valY
DATA_Finances[m,5]<-xmlValue(li[[i]][[j+1]][[3]][[2]][[1]]) # valY1
m<-m+1
}
}
rm(i,j,n,t,l,m,k,z)#rm(testRow,z)
#DATA_Finances<-subset(DATA_Finances,title!="NA" && valY!="NA") # a revoir, supprime 1 valeur de trop
del<-c(3:8,15:16,23:24,29:32); DATA_Finances<-DATA_Finances[-del,]
return(DATA_Finances)
}
rm(DATA_Finances)
DATA_Finances<-fillTable(li)
DATA_Finances$guid<-url
DATA_Finances<-getISIN(DATA_Finances)
View(DATA_RSS)
View(DATA_Finances)
View(DATA_Values_FR)
library(XML)
library(stringr)
library(RCurl)
library(XML)
#install.packages("XML")
library(XML)
library(stringr)
# ##############################################################################################################
#Flux rss Zonebourse.com
# ##############################################################################################################
# fonction de lecture d'un flux
getRSSitems <- function(RSSURL,level,print=TRUE) {
doc<-xmlTreeParse(RSSURL)
src<-xpathApply(xmlRoot(doc),paste( "//",level,sep=""))
for (i in 1:length(src)) {
if (i==1) {
foo<-xmlSApply(src[[i]], xmlValue)
DATA<-data.frame(t(foo), stringsAsFactors=FALSE)
}
else {
foo<-xmlSApply(src[[i]], xmlValue)
tmp<-data.frame(t(foo), stringsAsFactors=FALSE)
DATA<-rbind(DATA, tmp)
}
}
rm(doc)
rm(src)
return(DATA)
}
level<-"item"
Actions <- getRSSitems("http://www.zonebourse.com/rss/FeedAnalyses.php?type=Actions",level) #Stratégie de Trading
Invests <- getRSSitems("http://www.zonebourse.com/rss/FeedAnalysesFondamentales.php",level)#Stratégie d'investissement
Indices <- getRSSitems("http://www.zonebourse.com/rss/FeedAnalyses.php?type=Indices",level) #Stratégie Indices
Forex <- getRSSitems("http://www.zonebourse.com/rss/FeedAnalyses.php?type=Forex",level) #Stratégie Forex
Warrants <- getRSSitems("http://www.zonebourse.com/rss/FeedAnalyses.php?type=Warrants",level) #Stratégie Warrants
Turbos <- getRSSitems("http://www.zonebourse.com/rss/FeedAnalyses.php?type=Turbos",level) #Stratégie Turbos
#Barons <- getRSSitems("http://www.zonebourse.com/rss/FeedBaronsBourse.php",level)# Barons de la bourse
Actualites <- getRSSitems("http://www.zonebourse.com/rss/FeedAnalyses.php",level)# Toute l'actualité
getISIN<-function(table){
#a partir de guid récupérer nom et isin
table$NameISIN<-t(data.frame(strsplit(as.character(table$guid),"/",fixed=TRUE))[4,])
table$Name<-as.data.frame(str_match(table$NameISIN, "^(.*)-([0-9]*)$")[,-1])[,1]
table$ISIN<-as.data.frame(str_match(table$NameISIN, "^(.*)-([0-9]*)$")[,-1])[,2]
table<- subset(table, select=(-NameISIN))
return(table)
}
Invests$enclosure<-""
DATA_RSS<-rbind(Actions,Invests,Indices,Forex,Warrants,Turbos,Actualites)
DATA_RSS<-getISIN(DATA_RSS)
DATA_RSS<- subset(DATA_RSS, select=c(-enclosure,-guid))
rm(Actions,Invests,Indices,Forex,Warrants,Turbos,Actualites)
# ##############################################################################################################
# Aspiration des pages Zonebourse.com
# ##############################################################################################################
# ##############################################################################################################
# Récupérer liste de toutes les valeurs France  Zonebourse.com
# ##############################################################################################################
url<-"http://www.zonebourse.com/bourse/actions/Europe-3/France-51/"
getValuesList <- function(url,j,print=TRUE) {
script <- getURL(url)
doc <- htmlParse(script)
for (i in 1:50) {
#get NameISIN
li <- getNodeSet(doc, paste("//td[@id='iAL",i,"']",sep=""))
if (length(li)==0) break
DATA_Values_FR[(j-1)*50+i,1]<-gsub("/","",xmlGetAttr(li[[1]][[1]],"href"))
#get secteur
li <- getNodeSet(doc, "//td[@class='large200 center']")
DATA_Values_FR[(j-1)*50+i,2]<-xmlGetAttr(li[[i]][[1]],"title")
# get Var1janv and Capitalisation_MUSD
li <- getNodeSet(doc, "//td[@class='large70 right pright20']")
DATA_Values_FR[(j-1)*50+i,3]<-xmlValue(li[[i*2-1]][[1]][[1]])
DATA_Values_FR[(j-1)*50+i,4]<-xmlValue(li[[i*2]][[1]])
#get NoteInvestissement
li <- getNodeSet(doc, "//td[@class='large110 center']")
val<-xmlGetAttr(li[[i]][[1]],"title")
DATA_Values_FR[(j-1)*50+i,5]<-if(is.null(val)){NA}else{val}
#get trends Court Moyen Long terme
li <- getNodeSet(doc, "//td[@class='large20 center']")
DATA_Values_FR[(j-1)*50+i,6]<-if(is.null(li[[i*3-2]][[1]][[1]])){NA}else{strsplit(strsplit(xmlGetAttr(li[[i*3-2]][[1]][[1]],"src"),'.',fixed=TRUE)[[1]][[1]],'_',fixed=TRUE)[[1]][[2]]}
DATA_Values_FR[(j-1)*50+i,7]<-if(is.null(li[[i*3-1]][[1]][[1]])){NA}else{strsplit(strsplit(xmlGetAttr(li[[i*3-1]][[1]][[1]],"src"),'.',fixed=TRUE)[[1]][[1]],'_',fixed=TRUE)[[1]][[2]]}
DATA_Values_FR[(j-1)*50+i,8]<-if(is.null(li[[i*3]][[1]][[1]])){NA}else{strsplit(strsplit(xmlGetAttr(li[[i*3]][[1]][[1]],"src"),'.',fixed=TRUE)[[1]][[1]],'_',fixed=TRUE)[[1]][[2]]}
#get page and row
DATA_Values_FR[(j-1)*50+i,9]<-j
DATA_Values_FR[(j-1)*50+i,10]<-i
}
rm(script,doc,li,i,j,val)
return(DATA_Values_FR)
}
rm(DATA_Values_FR)
DATA_Values_FR<-data.frame(NameISIN=character(0),secteur=character(0),Var1janv=character(0),Capitalisation_MUSD=character(0),NoteInvestissement=character(0),CourtTerme=character(0),MoyenTerme=character(0),LongTerme=character(0),page=numeric(0),ligne=numeric(0))
DATA_Values_FR$NameISIN<-as.character(DATA_Values_FR$NameISIN);DATA_Values_FR$secteur<-as.character(DATA_Values_FR$secteur);
DATA_Values_FR$Var1janv<-as.character(DATA_Values_FR$Var1janv);DATA_Values_FR$Capitalisation_MUSD<-as.character(DATA_Values_FR$Capitalisation_MUSD);
DATA_Values_FR$NoteInvestissement<-as.character(DATA_Values_FR$NoteInvestissement);DATA_Values_FR$CourtTerme<-as.character(DATA_Values_FR$CourtTerme);
DATA_Values_FR$MoyenTerme<-as.character(DATA_Values_FR$MoyenTerme);DATA_Values_FR$LongTerme<-as.character(DATA_Values_FR$LongTerme);
DATA_Values_FR$page<-as.character(DATA_Values_FR$page);DATA_Values_FR$ligne<-as.character(DATA_Values_FR$ligne);
for (j in 1:20) {
url<-paste("http://www.zonebourse.com/bourse/actions/Europe-3/France-51/?Req=&p=",j,sep="")
DATA_Values_FR<-getValuesList(url,j)
}
# ##############################################################################################################
# Aspirateur page Finances d'une valeur Zonebourse.com
# ##############################################################################################################
library(RCurl)
library(XML)
# ok pour une valeur, reste à boucler pour toutes les valeurs -- voir dans la table DATA_Values_FR
url<-"http://www.zonebourse.com/GENFIT-16311755/fondamentaux/"
url<-"http://www.zonebourse.com/AXA-4615/fondamentaux/"
script <- getURL(url)
doc <- htmlParse(script)
li <- getNodeSet(doc, "//table[@class='ReutersTabInit']")
rm(script,doc)#rm(url);
fillTable <- function(li,print=TRUE) {
rows <- lapply(li, xpathSApply, "//tr[@class='ReutersTabOdd']", xmlValue)
rows[sapply(rows, is.list)] <- NA
t<-length(li) # nombre de tableaux
l<-lapply(rows, length)[[1]][[1]] # nombre de lignes dans chaque tableau #pb n'est pas le meme dans chaque
n<-t*l #total de lignes # du coup trop large
DATA_Finances<-data.frame(section=character(0),title=character(0),subtitle=character(0),valY=character(0),valY1=character(0))
DATA_Finances$section<-as.character(DATA_Finances$section)
DATA_Finances$title<-as.character(DATA_Finances$title)
DATA_Finances$subtitle<-as.character(DATA_Finances$subtitle)
DATA_Finances$valY<-as.character(DATA_Finances$valY)
DATA_Finances$valY1<-as.character(DATA_Finances$valY1)
m=1
for (i in 1:t) {
for (j in 1:l) {
DATA_Finances[m,1]<-gsub('\\r\\n        ','',xmlValue(li[[i]][[1]][[1]][[1]])) #section_title
DATA_Finances[m,2]<-gsub('\r\n        ','',xmlValue(li[[i]][[j+1]][[1]][[1]][[1]]))#title
DATA_Finances[m,3]<-xmlValue(li[[i]][[j+1]][[1]][[3]][[1]]) #subtitle
DATA_Finances[m,4]<-xmlValue(li[[i]][[j+1]][[2]][[2]][[1]]) # valY
DATA_Finances[m,5]<-xmlValue(li[[i]][[j+1]][[3]][[2]][[1]]) # valY1
m<-m+1
}
}
rm(i,j,n,t,l,m,k,z)#rm(testRow,z)
#DATA_Finances<-subset(DATA_Finances,title!="NA" && valY!="NA") # a revoir, supprime 1 valeur de trop
del<-c(3:8,15:16,23:24,29:32); DATA_Finances<-DATA_Finances[-del,]
return(DATA_Finances)
}
rm(DATA_Finances)
DATA_Finances<-fillTable(li)
DATA_Finances$guid<-url
DATA_Finances<-getISIN(DATA_Finances)
View(DATA_Values_FR)
#libelles
saveDir<-getwd()
dataDir<-paste(getwd(),"/Data/",sep="")
dir<-paste(dataDir,"/abcbourse/",sep="")
setwd(dir)
dir
dir<-paste(dataDir,"abcbourse/",sep="")
setwd(dir)
dir
setwd("C:/Users/Jawad/Documents/GitHub/prediction-bourse/")
Sys.setenv(LANG = "en")
Sys.setlocale( "LC_TIME", "English" )
source("loadLibraries.R")
saveDir<-getwd()
dataDir<-paste(getwd(),"/Data/",sep="")
dir<-paste(dataDir,"abcbourse/",sep="")
setwd(dir)
dir
fileName<-"Cotations20150513.txt"
tradingDays <- read.csv(fileName,sep=";",header=TRUE)
cotations <- read.csv(fileName,sep=";",header=TRUE)
cotations
head(cotations)
mydata = read.table("Cotations20150513.txt")
mydata
?read.table
cotations <- read.table(fileName,sep=";",header=TRUE)
head(cotations)
cotations <- read.table(fileName,sep=";",header=FALSE)
head(cotations)
names(cotations)<-c("ISIN","date","ouverture","bas","haut","cloture","volume")
head(cotations)
names(cotations)<-c("ISIN","date","ouverture","haut","bas","cloture","volume")
head(cotations)
str(cotations)
cotations$date<-as.Date(cotations$date)
str(cotations)
?as.Date
cotations <- read.table(fileName,sep=";",header=FALSE)
names(cotations)<-c("ISIN","date","ouverture","haut","bas","cloture","volume")
cotations$date<-as.Date(cotations$date, "%d/%m/%y")
str(cotations)
dim(cotations)
date
date()
format(sys.date(),"%y-%m-%d")
format(date(),"%y-%m-%d")
format(Sys.Date(),"%y-%m-%d")
format(Sys.Date(),"%Y%m%d")
hier<-format(Sys.Date()-1,"%Y%m%d")
hier
fileName<-paste("Cotations",hier,".txt",sep="")
fileName
fileName<-paste("Cotations",hier,".txt",sep="")
cotations <- read.table(fileName,sep=";",header=FALSE)
names(cotations)<-c("ISIN","date","ouverture","haut","bas","cloture","volume")
cotations$date<-as.Date(cotations$date, "%d/%m/%y")
cotations
View(cotations)
