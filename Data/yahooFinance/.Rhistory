colsL<-length(li)
colNames<- as.list(rep(NA, colsL))
for(i in 1:colsL){colNames[i]<-xmlValue(li[[i]][[1]])}
rm(cac40_tickers)
cac40_tickers<-data.frame(matrix(ncol = colsL, nrow = 40))
cac40_tickers
names(cac40_tickers)<-colNames
cac40_tickers
li[[2]][[1]][[1]][[1]]
li[[3]][[1]][[1]][[1]]
li[[4]][[1]][[1]][[1]]
li[[5]][[1]][[1]][[1]]
li[[6]][[1]][[1]][[1]]
li <- getNodeSet(doc, "//td[@class='yfnc_tabledata1']")
li
li[[1]]
li[[2]]
li[[2]][[1]]
li[[3]][[1]]
li[[4]][[1]]
li[[5]][[1]]
li[[6]][[1]]
li[[6]][[1]][[1]]
li[[6]][[1]][[1]][[1]]
li[[11]][[1]][[1]][[1]]
li[[7]][[1]]
li[[12]][[1]]
i=1
2+5*(i-1)
i=2
2+5*(i-1)
i=3
2+5*(i-1)
i=1
1+5*(i-1)
i=2
1+5*(i-1)
i=3
1+5*(i-1)
li <- getNodeSet(doc, "//td[@class='yfnc_tabledata1']")
for(i in 1:40){
# code
cac40_tickers[i,1]<-xmlValue(li[[1+5*(i-1)]][[1]][[1]][[1]])
#   li[[1]][[1]][[1]][[1]]
#   AC.PA
#   li[[6]][[1]][[1]][[1]]
#   ACA.PA
#   li[[11]][[1]][[1]][[1]]
#   AI.PA
# nom
cac40_tickers[i,2]<-xmlValue(li[[2+5*(i-1)]][[1]])
#   li[[2]][[1]]
#   Accor S.A.
#   li[[7]][[1]]
#   Credit Agricole S.A.
#   li[[12]][[1]]
#   L'Air Liquide SA
#   2+5*(i-1)
}
View(cac40_tickers)
cac40_tickers_list<-""
cac40_tickers_list<-""
#get column values
li <- getNodeSet(doc, "//td[@class='yfnc_tabledata1']")
for(i in 1:40){
# code
cac40_tickers[i,1]<-xmlValue(li[[1+5*(i-1)]][[1]][[1]][[1]])
# nom
cac40_tickers[i,2]<-xmlValue(li[[2+5*(i-1)]][[1]])
# je ne récupère pas les autres valeurs
cac40_tickers_list<-paste(cac40_tickers_list,cac40_tickers[i,1],sep=",")
}
tickerSymbols<-cac40_tickers_list
URL<-paste("http://download.finance.yahoo.com/d/quotes.csv?s=",tickerSymbols,"&f=",tagsToRead,"&e=.csv",sep="")
destFile<-"quotes.csv"
download.file(URL,destFile)
cotations<-read.csv(destFile,sep=",",header=FALSE)
names(cotations)<-make.names(names,unique = FALSE, allow_ = TRUE)
View(cotations)
names<-c('Ask','Average Daily Volume','Ask Size','Bid','Ask (Real-time)','Bid (Real-time)','Book Value','Bid Size','Change & Percent Change','Change','Commission','Currency','Change (Real-time)','After Hours Change (Real-time)','Dividend/Share','Last Trade Date','Trade Date','Earnings/Share','Error Indication (returned for symbol changed / invalid)','EPS Estimate Current Year','EPS Estimate Next Year','EPS Estimate Next Quarter','Trade Links Additional','Float Shares','Day’s Low','Holdings Gain Percent','Annualized Gain','Holdings Gain','Holdings Gain Percent (Real-time)','Holdings Gain (Real-time)','Day’s High','More Info','Order Book (Real-time)','52-week Low','Market Capitalization','Shares Outstanding','Market Cap (Real-time)','EBITDA','Change From 52-week Low','Percent Change From 52-week Low','52-week High','Last Trade (Real-time) With Time','Change Percent (Real-time)','Last Trade Size','Change From 52-week High','Percent Change From 52-week High','Last Trade (With Time)','Last Trade (Price Only)','High Limit','Low Limit','Day’s Range','Day’s Range (Real-time)','50-day Moving Average','200-day Moving Average','Change From 200-day Moving Average','Percent Change From 200-day Moving Average','Change From 50-day Moving Average','Percent Change From 50-day Moving Average','Name','Notes','Open','Previous Close','Price Paid','Change in Percent','Price/Sales','Price/Book','Ex-Dividend Date','P/E Ratio','Dividend Pay Date','P/E Ratio (Real-time)','PEG Ratio','Price/EPS Estimate Current Year','Price/EPS Estimate Next Year','Symbol','Shares Owned','Revenue','Short Ratio','Last Trade Time','Trade Links','Ticker Trend','1 yr Target Price','Volume','Holdings Value','Holdings Value (Real-time)','52-week Range','Day’s Value Change','Day’s Value Change (Real-time)','Stock Exchange','Dividend Yield')
names(cotations)<-make.names(names,unique = FALSE, allow_ = TRUE)
View(cotations)
rm(movies)
rm(colNames)
rm(dir)
rm(dir,dataDir)
rm(url,script,doc,li,colsL,colNames)
rm(url,destFile,i,j,cac40_tickers_list)
rm(url,destFile,i,j,cac40_tickers_list,tagsToRead,tickerSymbols)
rm(levle)
rm(level)
rm(url,destFile,i,j,cac40_tickers_list,tagsToRead,tickerSymbols,names)
rm(URL,url,destFile,i,j,cac40_tickers_list,tagsToRead,tickerSymbols,names)
rm(airquality)
save.image("~/GitHub/prediction-bourse/workspace.RData")
View(DATA_Values_FR)
View(DATA_Finances)
cotations$Name
DATA_Values_FR$NameISIN
DATA_Values_FR$Name<-as.data.frame(str_match(DATA_Values_FR$NameISIN, "^(.*)-([0-9]*)$")[,-1])[,1]
DATA_Values_FR$ISIN<-as.data.frame(str_match(DATA_Values_FR$NameISIN, "^(.*)-([0-9]*)$")[,-1])[,2]
View(DATA_Values_FR)
View(DATA_Finances)
View(cotations)
View(cac40_tickers)
cotations_now<-read.csv(destFile,sep=",",header=FALSE)
names(cotations_now)<-make.names(names,unique = FALSE, allow_ = TRUE)
# #############################################################################################"
# Set Directory
# #############################################################################################"
saveDir<-getwd()
dataDir<-paste(getwd(),"/Data/",sep="")
dir<-paste(dataDir,"yahooFinance/",sep="")
setwd(dir)
rm(dir,dataDir)
# #############################################################################################"
# Tickers names
# List of companies for nasdaq and nyse
#URL<-"http://www.nasdaq.com/screening/companies-by-name.aspx?letter=0&exchange=nasdaq&render=download"
#URL<-"http://www.nasdaq.com/screening/companies-by-name.aspx?letter=0&exchange=nyse&render=download"
#URL<-"http://www.nasdaq.com/screening/companies-by-name.aspx?letter=0&exchange=cac40&render=download"
#destFile<-"companylist.csv"
#download.file(URL,destFile)
# #############################################################################################"
# Tickers names
# List of companies for Cac40 (^FCHI) -Paris
url<-"http://finance.yahoo.com/q/cp?s=%5EFCHI"
script <- getURL(url)
doc <- htmlParse(script)
# get column names
li <- getNodeSet(doc, "//th[@class='yfnc_tablehead1']")
colsL<-length(li)
colNames<- as.list(rep(NA, colsL))
for(i in 1:colsL){colNames[i]<-xmlValue(li[[i]][[1]])}
# create table
rm(cac40_tickers)
cac40_tickers<-data.frame(matrix(ncol = colsL, nrow = 40))
names(cac40_tickers)<-colNames
cac40_tickers_list<-""
#get column values
li <- getNodeSet(doc, "//td[@class='yfnc_tabledata1']")
for(i in 1:40){
# code
cac40_tickers[i,1]<-xmlValue(li[[1+5*(i-1)]][[1]][[1]][[1]])
# nom
cac40_tickers[i,2]<-xmlValue(li[[2+5*(i-1)]][[1]])
# je ne récupère pas les autres valeurs
cac40_tickers_list<-paste(cac40_tickers_list,cac40_tickers[i,1],sep=",")
}
rm(url,script,doc,li,colsL,colNames)
# #############################################################################################"
# voir la documentation pour construire les urls ici
# http://www.canbike.org/information-technology/yahoo-finance-url-download-to-a-csv-file.html
#http://download.finance.yahoo.com/d/quotes.csv?s=IBM&f=nl1r&e=.csv
#http://download.finance.yahoo.com/d/quotes.csv?s=IBM&f=sl1d1t1c1ohgv&e=.csv
# #############################################################################################"
# all tags are in the tag.csv file
# g  Day’s Low
# n  Name
# o  Open
# p  Previous Close
# p1	Price Paid
# s  Symbol
# v  Volume
tags<-read.csv("tags.csv",sep=";",header=TRUE)
# concatener tous les tags
# aa2a5bb2b3b4b6cc1c3c4c6c8dd1d2ee1e7e8e9f0f6gg1g3g4g5g6hii5jj1j2j3j4j5j6kk1k2k3k4k5ll1l2l3mm2m3m4m5m6m7m8nn4opp1p2p5p6qrr1r2r5r6r7ss1s6s7t1t6t7t8vv1v7ww1w4xy
names<-c('Ask','Average Daily Volume','Ask Size','Bid','Ask (Real-time)','Bid (Real-time)','Book Value','Bid Size','Change & Percent Change','Change','Commission','Currency','Change (Real-time)','After Hours Change (Real-time)','Dividend/Share','Last Trade Date','Trade Date','Earnings/Share','Error Indication (returned for symbol changed / invalid)','EPS Estimate Current Year','EPS Estimate Next Year','EPS Estimate Next Quarter','Trade Links Additional','Float Shares','Day’s Low','Holdings Gain Percent','Annualized Gain','Holdings Gain','Holdings Gain Percent (Real-time)','Holdings Gain (Real-time)','Day’s High','More Info','Order Book (Real-time)','52-week Low','Market Capitalization','Shares Outstanding','Market Cap (Real-time)','EBITDA','Change From 52-week Low','Percent Change From 52-week Low','52-week High','Last Trade (Real-time) With Time','Change Percent (Real-time)','Last Trade Size','Change From 52-week High','Percent Change From 52-week High','Last Trade (With Time)','Last Trade (Price Only)','High Limit','Low Limit','Day’s Range','Day’s Range (Real-time)','50-day Moving Average','200-day Moving Average','Change From 200-day Moving Average','Percent Change From 200-day Moving Average','Change From 50-day Moving Average','Percent Change From 50-day Moving Average','Name','Notes','Open','Previous Close','Price Paid','Change in Percent','Price/Sales','Price/Book','Ex-Dividend Date','P/E Ratio','Dividend Pay Date','P/E Ratio (Real-time)','PEG Ratio','Price/EPS Estimate Current Year','Price/EPS Estimate Next Year','Symbol','Shares Owned','Revenue','Short Ratio','Last Trade Time','Trade Links','Ticker Trend','1 yr Target Price','Volume','Holdings Value','Holdings Value (Real-time)','52-week Range','Day’s Value Change','Day’s Value Change (Real-time)','Stock Exchange','Dividend Yield')
# #############################################################################################"
tickerSymbols<-cac40_tickers_list
tagsToRead<-"aa2a5bb2b3b4b6cc1c3c4c6c8dd1d2ee1e7e8e9f0f6gg1g3g4g5g6hii5jj1j2j3j4j5j6kk1k2k3k4k5ll1l2l3mm2m3m4m5m6m7m8nn4opp1p2p5p6qrr1r2r5r6r7ss1s6s7t1t6t7t8vv1v7ww1w4xy"
# #############################################################################################"
URL<-paste("http://download.finance.yahoo.com/d/quotes.csv?s=",tickerSymbols,"&f=",tagsToRead,"&e=.csv",sep="")
destFile<-"quotes.csv"
download.file(URL,destFile)
# #############################################################################################"
# read downloaded file
# avec ça, j'ai les cotations du CAC40 à l'instant t
# J'ai l'Open du jour et le PreviousClose
cotations_now<-read.csv(destFile,sep=",",header=FALSE)
names(cotations_now)<-make.names(names,unique = FALSE, allow_ = TRUE)
# reste à faire: passer dans les bons formats
# par ex tous les champs qui ont "Date" dans leur nom
#cotations_now$date<-as.Date(cotations_now$date, "%d/%m/%y")
View(cac40_tickers)
rm(cotations)
url<-"http://finance.yahoo.com/q/hp?s=AC.PA"
script <- getURL(url)
doc <- htmlParse(script)
# get column names
li <- getNodeSet(doc, "//th[@class='yfnc_tablehead1']")
li
colsL<-length(li)
colNames<- as.list(rep(NA, colsL))
for(i in 1:colsL){colNames[i]<-xmlValue(li[[i]][[1]])}
as.Date(date(),"&d=%m&e=%d&f=%Y")
date()
format(date(),"&d=%m&e=%d&f=%Y")
format(date(),"%m%Y")
as.Date(date(),"%m%Y")
format(Sys.Date()-1,"%Y%m%d")
format(Sys.Date(),"&d=%m&e=%d&f=%Y")
format(Sys.Date(),"&D=%m&e=%d&f=%Y")
format(Sys.Date(),"&d=%M&e=%d&f=%Y")
format(Sys.Date(),"&d=%m&e=%d&f=%Y")
begin<-Sys.Date()-365
begin<-format(begin,"d=%m&e=%d&f=%Y")
end<-Sys.Date()
end<-format(end,"a=%m&b=%d&c=%Y")
begin
end
url<-paste("http://real-chart.finance.yahoo.com/table.csv?s=AC.PA",begin,"&g=d",end,"ignore=.csv",sep="&")
url
url<-paste("http://real-chart.finance.yahoo.com/table.csv?s=AC.PA",begin,"g=d",end,"ignore=.csv",sep="&")
url
url<-paste("http://real-chart.finance.yahoo.com/table.csv?s=AC.PA",end,"g=d",begin,"ignore=.csv",sep="&")
url
begin<-"a=0&b=1&c=2000"
url<-paste("http://real-chart.finance.yahoo.com/table.csv?s=AC.PA",end,"g=d",begin,"ignore=.csv",sep="&")
url
url<-paste("http://real-chart.finance.yahoo.com/table.csv?s=AC.PA",begin,"g=d",end,"ignore=.csv",sep="&")
url
begin<-Sys.Date()-365
begin<-format(begin,"d=%m&e=%d&f=%Y")
end<-Sys.Date()
end<-format(end,"a=%m&b=%d&c=%Y")
url<-paste("http://real-chart.finance.yahoo.com/table.csv?s=AC.PA",begin,"g=d",end,"ignore=.csv",sep="&")
url
begin<-Sys.Date()-365
begin<-format(begin,"a=%m&b=%d&c=%Y")
begin<-"a=0&b=1&c=2000"
end<-Sys.Date()
end<-format(end,"d=%m&e=%d&f=%Y")
begin<-Sys.Date()-365
begin<-format(begin,"a=%m&b=%d&c=%Y")
#begin<-"a=0&b=1&c=2000"
end<-Sys.Date()
end<-format(end,"d=%m&e=%d&f=%Y")
#  &d=4&e=15&f=2015
#&a=0&b=3&c=2000&
url<-paste("http://real-chart.finance.yahoo.com/table.csv?s=AC.PA",begin,"g=d",end,"ignore=.csv",sep="&")
url
destFile<-"quotesPerDay.csv"
download.file(URL,destFile)
download.file(url,destFile)
ticker<-"AC.PA"
url<-paste("http://real-chart.finance.yahoo.com/table.csv?s=AC.PA",begin,"&g=d",end,"&ignore=.csv",sep="")
url
begin<-Sys.Date()-365*10
begin<-format(begin,"&a=%m&b=%d&c=%Y")
end<-Sys.Date()
end<-format(end,"&d=%m&e=%d&f=%Y")
ticker<-"AC.PA"
url<-paste("http://real-chart.finance.yahoo.com/table.csv?s=AC.PA",begin,"&g=d",end,"&ignore=.csv",sep="")
url
url<-paste("http://real-chart.finance.yahoo.com/table.csv?s=",ticker,begin,"&g=d",end,"&ignore=.csv",sep="")
url
destFile<-"quotesPerDay.csv"
download.file(url,destFile)
download.file(url,destFile)
destFile<-paste("quotesPerDay",ticker,".csv",sep="_"
download.file(url,destFile)
destFile<-paste("quotesPerDay",ticker,".csv",sep="_")
download.file(url,destFile)
destFile<-paste("quotesPerDay_",ticker,".csv",sep="")
download.file(url,destFile)
destFile<-paste("quotesPerDay_",ticker,".csv",sep="")
download.file(url,destFile)
setwd("C:/Users/Jawad/Documents/GitHub/prediction-bourse/")
Sys.setenv(LANG = "en")
Sys.setlocale( "LC_TIME", "English" )
source("loadLibraries.R")
# #############################################################################################"
# Set Directory
# #############################################################################################"
saveDir<-getwd()
dataDir<-paste(getwd(),"/Data/",sep="")
dir<-paste(dataDir,"yahooFinance/",sep="")
setwd(dir)
rm(dir,dataDir)
# #############################################################################################"
# Tickers names
# List of companies for nasdaq and nyse
#URL<-"http://www.nasdaq.com/screening/companies-by-name.aspx?letter=0&exchange=nasdaq&render=download"
#URL<-"http://www.nasdaq.com/screening/companies-by-name.aspx?letter=0&exchange=nyse&render=download"
#URL<-"http://www.nasdaq.com/screening/companies-by-name.aspx?letter=0&exchange=cac40&render=download"
#destFile<-"companylist.csv"
#download.file(URL,destFile)
# #############################################################################################"
# Tickers names
# List of companies for Cac40 (^FCHI) -Paris
url<-"http://finance.yahoo.com/q/cp?s=%5EFCHI"
script <- getURL(url)
doc <- htmlParse(script)
# get column names
li <- getNodeSet(doc, "//th[@class='yfnc_tablehead1']")
colsL<-length(li)
colNames<- as.list(rep(NA, colsL))
for(i in 1:colsL){colNames[i]<-xmlValue(li[[i]][[1]])}
# create table
rm(cac40_tickers)
cac40_tickers<-data.frame(matrix(ncol = colsL, nrow = 40))
names(cac40_tickers)<-colNames
cac40_tickers_list<-""
#get column values
li <- getNodeSet(doc, "//td[@class='yfnc_tabledata1']")
for(i in 1:40){
# code
cac40_tickers[i,1]<-xmlValue(li[[1+5*(i-1)]][[1]][[1]][[1]])
# nom
cac40_tickers[i,2]<-xmlValue(li[[2+5*(i-1)]][[1]])
# je ne récupère pas les autres valeurs
cac40_tickers_list<-paste(cac40_tickers_list,cac40_tickers[i,1],sep=",")
}
rm(url,script,doc,li,colsL,colNames)
# #############################################################################################"
# voir la documentation pour construire les urls ici
# http://www.canbike.org/information-technology/yahoo-finance-url-download-to-a-csv-file.html
#http://download.finance.yahoo.com/d/quotes.csv?s=IBM&f=nl1r&e=.csv
#http://download.finance.yahoo.com/d/quotes.csv?s=IBM&f=sl1d1t1c1ohgv&e=.csv
# #############################################################################################"
# all tags are in the tag.csv file
tags<-read.csv("tags.csv",sep=";",header=TRUE)
# concatener tous les tags
# aa2a5bb2b3b4b6cc1c3c4c6c8dd1d2ee1e7e8e9f0f6gg1g3g4g5g6hii5jj1j2j3j4j5j6kk1k2k3k4k5ll1l2l3mm2m3m4m5m6m7m8nn4opp1p2p5p6qrr1r2r5r6r7ss1s6s7t1t6t7t8vv1v7ww1w4xy
names<-c('Ask','Average Daily Volume','Ask Size','Bid','Ask (Real-time)','Bid (Real-time)','Book Value','Bid Size','Change & Percent Change','Change','Commission','Currency','Change (Real-time)','After Hours Change (Real-time)','Dividend/Share','Last Trade Date','Trade Date','Earnings/Share','Error Indication (returned for symbol changed / invalid)','EPS Estimate Current Year','EPS Estimate Next Year','EPS Estimate Next Quarter','Trade Links Additional','Float Shares','Day’s Low','Holdings Gain Percent','Annualized Gain','Holdings Gain','Holdings Gain Percent (Real-time)','Holdings Gain (Real-time)','Day’s High','More Info','Order Book (Real-time)','52-week Low','Market Capitalization','Shares Outstanding','Market Cap (Real-time)','EBITDA','Change From 52-week Low','Percent Change From 52-week Low','52-week High','Last Trade (Real-time) With Time','Change Percent (Real-time)','Last Trade Size','Change From 52-week High','Percent Change From 52-week High','Last Trade (With Time)','Last Trade (Price Only)','High Limit','Low Limit','Day’s Range','Day’s Range (Real-time)','50-day Moving Average','200-day Moving Average','Change From 200-day Moving Average','Percent Change From 200-day Moving Average','Change From 50-day Moving Average','Percent Change From 50-day Moving Average','Name','Notes','Open','Previous Close','Price Paid','Change in Percent','Price/Sales','Price/Book','Ex-Dividend Date','P/E Ratio','Dividend Pay Date','P/E Ratio (Real-time)','PEG Ratio','Price/EPS Estimate Current Year','Price/EPS Estimate Next Year','Symbol','Shares Owned','Revenue','Short Ratio','Last Trade Time','Trade Links','Ticker Trend','1 yr Target Price','Volume','Holdings Value','Holdings Value (Real-time)','52-week Range','Day’s Value Change','Day’s Value Change (Real-time)','Stock Exchange','Dividend Yield')
# #############################################################################################"
tickerSymbols<-cac40_tickers_list
tagsToRead<-"aa2a5bb2b3b4b6cc1c3c4c6c8dd1d2ee1e7e8e9f0f6gg1g3g4g5g6hii5jj1j2j3j4j5j6kk1k2k3k4k5ll1l2l3mm2m3m4m5m6m7m8nn4opp1p2p5p6qrr1r2r5r6r7ss1s6s7t1t6t7t8vv1v7ww1w4xy"
# #############################################################################################"
URL<-paste("http://download.finance.yahoo.com/d/quotes.csv?s=",tickerSymbols,"&f=",tagsToRead,"&e=.csv",sep="")
destFile<-"quotes.csv"
download.file(URL,destFile)
# #############################################################################################"
# read downloaded file
# avec ça, j'ai les cotations du CAC40 à l'instant t
# J'ai l'Open du jour et le PreviousClose
quotes_now<-read.csv(destFile,sep=",",header=FALSE)
names(quotes_now)<-make.names(names,unique = FALSE, allow_ = TRUE)
# reste à faire: passer dans les bons formats
# par ex tous les champs qui ont "Date" dans leur nom
#quotes_now$date<-as.Date(quotes_now$date, "%d/%m/%y")
# #############################################################################################"
# Historical data for one value per day
# url<-"http://finance.yahoo.com/q/hp?s=AC.PA"
# exactement la meme structure que la liste des valeurs du cac 40
# => voir si je peux faire une fonction générique pour lire sur Yahoo
# sinon j'ai l'url directe de téléchargement
url<-"http://real-chart.finance.yahoo.com/table.csv?s=AC.PA&d=4&e=15&f=2015&g=d&a=0&b=3&c=2000&ignore=.csv"
begin<-Sys.Date()-365*10
begin<-format(begin,"&a=%m&b=%d&c=%Y")
end<-Sys.Date()
end<-format(end,"&d=%m&e=%d&f=%Y")
ticker<-"AC.PA"
url<-paste("http://real-chart.finance.yahoo.com/table.csv?s=",ticker,begin,"&g=d",end,"&ignore=.csv",sep="")
destFile<-paste("quotesPerDay_",ticker,".csv",sep="")
download.file(url,destFile)
quotesPerDay<-read.csv(destFile,sep=",",header=TRUE)
View(quotesPerDay)
quotesPerDay
str(quotesPerDay)
quotesPerDay$Date<-as.Date(quotesPerDay$Date)
str(quotesPerDay)
View(quotes_now)
quotesPerDay$Symbol<-ticker
View(quotesPerDay)
ticker<-cac40_tickers_list
url<-paste("http://real-chart.finance.yahoo.com/table.csv?s=",ticker,begin,"&g=d",end,"&ignore=.csv",sep="")
destFile<-paste("quotesPerDay_",ticker,".csv",sep="")
download.file(url,destFile)
destFile<-"quotesPerDay.csv"
download.file(url,destFile)
url
rm(quotesPerDay_tmp)
rm(quotesPerDay)
rm(quotesPerDay_tmp)
quotesPerDay_tmp<-read.csv(destFile,sep=",",header=TRUE)
quotesPerDay_tmp$Date<-as.Date(quotesPerDay_tmp$Date)
quotesPerDay_tmp$Symbol<-ticker
destFile<-paste("quotesPerDay_",ticker,".csv",sep="")
#destFile<-"quotesPerDay.csv"
download.file(url,destFile)
ticker<-"AC.PA"
destFile<-paste("quotesPerDay_",ticker,".csv",sep="")
#destFile<-"quotesPerDay.csv"
download.file(url,destFile)
# Read file
rm(quotesPerDay_tmp)
begin<-Sys.Date()-365*10
begin<-format(begin,"&a=%m&b=%d&c=%Y")
end<-Sys.Date()
end<-format(end,"&d=%m&e=%d&f=%Y")
ticker<-"AC.PA"
url<-paste("http://real-chart.finance.yahoo.com/table.csv?s=",ticker,begin,"&g=d",end,"&ignore=.csv",sep="")
# Download
destFile<-paste("quotesPerDay_",ticker,".csv",sep="")
#destFile<-"quotesPerDay.csv"
download.file(url,destFile)
# Read file
rm(quotesPerDay_tmp)
quotesPerDay_tmp<-read.csv(destFile,sep=",",header=TRUE)
quotesPerDay_tmp$Date<-as.Date(quotesPerDay_tmp$Date)
quotesPerDay_tmp$Symbol<-ticker
# Add to all values' file
str(quotesPerDay_tmp)
quotesPerDay<-data.frame(Date=date(0),Open=numeric(0))
quotesPerDay<-data.frame(Date=Date(0),Open=numeric(0))
quotesPerDay<-data.frame(Date=as.Date(character((0),Open=numeric(0))
quotesPerDay<-data.frame(Date=as.Date(character((0)),Open=numeric(0))
quotesPerDay<-data.frame(Date=as.Date(character(0)),Open=numeric(0))
quotesPerDay<-data.frame(Date=as.Date(character(0)),Open=numeric(0))
str(quotesPerDay)
str(quotesPerDay_tmp)
quotesPerDay<-data.frame(Date=as.Date(character(0)),Open=numeric(0),High=numeric(0),Low=numeric(0),Close=numeric(0),Volume=integer(0),Adj.Close=numeric(0),Symbol=character(0))
str(quotesPerDay)
quotesPerDay<-rbind(quotesPerDay,quotesPerDay_tmp)
View(quotesPerDay)
rm(quotesPerDay)
View(cac40_tickers)
quotesPerDay<-data.frame(Date=as.Date(character(0)),Open=numeric(0),High=numeric(0),Low=numeric(0),Close=numeric(0),Volume=integer(0),Adj.Close=numeric(0),Symbol=character(0))
begin<-Sys.Date()-365*10
begin<-format(begin,"&a=%m&b=%d&c=%Y")
end<-Sys.Date()
end<-format(end,"&d=%m&e=%d&f=%Y")
for (i in 1:40){
#ticker<-"AC.PA"
ticker<-cac_40_tickers[1,i]
url<-paste("http://real-chart.finance.yahoo.com/table.csv?s=",ticker,begin,"&g=d",end,"&ignore=.csv",sep="")
# Download
destFile<-paste("quotesPerDay_",ticker,".csv",sep="")
#destFile<-"quotesPerDay.csv"
download.file(url,destFile)
# Read file
rm(quotesPerDay_tmp)
quotesPerDay_tmp<-read.csv(destFile,sep=",",header=TRUE)
quotesPerDay_tmp$Date<-as.Date(quotesPerDay_tmp$Date)
quotesPerDay_tmp$Symbol<-ticker
# Add to all values' file
quotesPerDay<-rbind(quotesPerDay,quotesPerDay_tmp)
}
quotesPerDay<-data.frame(Date=as.Date(character(0)),Open=numeric(0),High=numeric(0),Low=numeric(0),Close=numeric(0),Volume=integer(0),Adj.Close=numeric(0),Symbol=character(0))
begin<-Sys.Date()-365*10
begin<-format(begin,"&a=%m&b=%d&c=%Y")
end<-Sys.Date()
end<-format(end,"&d=%m&e=%d&f=%Y")
for (i in 1:40){
#ticker<-"AC.PA"
ticker<-cac40_tickers[1,i]
url<-paste("http://real-chart.finance.yahoo.com/table.csv?s=",ticker,begin,"&g=d",end,"&ignore=.csv",sep="")
# Download
destFile<-paste("quotesPerDay_",ticker,".csv",sep="")
#destFile<-"quotesPerDay.csv"
download.file(url,destFile)
# Read file
rm(quotesPerDay_tmp)
quotesPerDay_tmp<-read.csv(destFile,sep=",",header=TRUE)
quotesPerDay_tmp$Date<-as.Date(quotesPerDay_tmp$Date)
quotesPerDay_tmp$Symbol<-ticker
# Add to all values' file
quotesPerDay<-rbind(quotesPerDay,quotesPerDay_tmp)
}
cac40_tickers[1,1]
cac40_tickers[1,2]
cac40_tickers[2,1]
quotesPerDay<-data.frame(Date=as.Date(character(0)),Open=numeric(0),High=numeric(0),Low=numeric(0),Close=numeric(0),Volume=integer(0),Adj.Close=numeric(0),Symbol=character(0))
begin<-Sys.Date()-365*10
begin<-format(begin,"&a=%m&b=%d&c=%Y")
end<-Sys.Date()
end<-format(end,"&d=%m&e=%d&f=%Y")
for (i in 1:40){
#ticker<-"AC.PA"
ticker<-cac40_tickers[i,1]
url<-paste("http://real-chart.finance.yahoo.com/table.csv?s=",ticker,begin,"&g=d",end,"&ignore=.csv",sep="")
# Download
destFile<-paste("quotesPerDay_",ticker,".csv",sep="")
#destFile<-"quotesPerDay.csv"
download.file(url,destFile)
# Read file
rm(quotesPerDay_tmp)
quotesPerDay_tmp<-read.csv(destFile,sep=",",header=TRUE)
quotesPerDay_tmp$Date<-as.Date(quotesPerDay_tmp$Date)
quotesPerDay_tmp$Symbol<-ticker
# Add to all values' file
quotesPerDay<-rbind(quotesPerDay,quotesPerDay_tmp)
}
quotesPerDay<-data.frame(Date=as.Date(character(0)),Open=numeric(0),High=numeric(0),Low=numeric(0),Close=numeric(0),Volume=integer(0),Adj.Close=numeric(0),Symbol=character(0))
begin<-Sys.Date()-365*10
begin<-format(begin,"&a=%m&b=%d&c=%Y")
end<-Sys.Date()
end<-format(end,"&d=%m&e=%d&f=%Y")
for (i in 1:40){
#ticker<-"AC.PA"
ticker<-cac40_tickers[i,1]
url<-paste("http://real-chart.finance.yahoo.com/table.csv?s=",ticker,begin,"&g=d",end,"&ignore=.csv",sep="")
# Download
destFile<-paste("quotesPerDay_",ticker,".csv",sep="")
#destFile<-"quotesPerDay.csv"
download.file(url,destFile)
# Read file
rm(quotesPerDay_tmp)
quotesPerDay_tmp<-read.csv(destFile,sep=",",header=TRUE)
quotesPerDay_tmp$Date<-as.Date(quotesPerDay_tmp$Date)
quotesPerDay_tmp$Symbol<-ticker
# Add to all values' file
quotesPerDay<-rbind(quotesPerDay,quotesPerDay_tmp)
if(file.exists(destFile)){file.remove(destFile)}
}
View(quotesPerDay)
rm(destFile,begin,end,i,URL,url,quotesPerDay_tmp)
View(quotesPerDay)
quotesPerDay[20000,]
quotesPerDay[20001,]
